//
// Copyright 2014-2017 Cristian Maglie. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.
//

// This file is machine generated by the command:
//   mksyscall.pl -darwin serial_darwin.go
// The generated stub is modified to make it compile under the "serial" package

package serial

import (
	"golang.org/x/sys/unix"
	_ "unsafe"
)

func ioctl(fd int, req uint64, data uintptr) (err error) {
	_, _, e1 := unix.Syscall(funcPC(libc_ioctl_trampoline), uintptr(fd), uintptr(req), uintptr(data))
	if e1 != 0 {
		err = e1
	}
	return
}

//go:linkname funcPC runtime.funcPC
func funcPC(f interface{}) uintptr

//go:linkname libc_ioctl_trampoline syscall.libc_ioctl_trampoline
func libc_ioctl_trampoline()

//go:linkname libc_ioctl libc_ioctl
//go:cgo_import_dynamic libc_ioctl ioctl "/usr/lib/libSystem.B.dylib"
